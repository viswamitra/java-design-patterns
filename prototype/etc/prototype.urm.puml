@startuml
package com.iluwatar.prototype {
  interface HeroFactory {
    + createBeast() : Beast {abstract}
    + createMage() : Mage {abstract}
    + createWarlord() : Warlord {abstract}
  }
  class OrcBeast {
    + OrcBeast()
    + clone() : Beast
    + toString() : String
  }
  abstract class Mage {
    + Mage()
    + clone() : Mage {abstract}
  }
  class HeroFactoryImpl {
    - beast : Beast
    - mage : Mage
    - warlord : Warlord
    + HeroFactoryImpl(mage : Mage, warlord : Warlord, beast : Beast)
    + createBeast() : Beast
    + createMage() : Mage
    + createWarlord() : Warlord
  }
  class ElfMage {
    + ElfMage()
    + clone() : Mage
    + toString() : String
  }
  abstract class Prototype {
    + Prototype()
    + clone() : Object {abstract}
  }
  class App {
    + App()
    + main(args : String[]) {static}
  }
  abstract class Warlord {
    + Warlord()
    + clone() : Warlord {abstract}
  }
  class OrcWarlord {
    + OrcWarlord()
    + clone() : Warlord
    + toString() : String
  }
  class ElfWarlord {
    + ElfWarlord()
    + clone() : Warlord
    + toString() : String
  }
  abstract class Beast {
    + Beast()
    + clone() : Beast {abstract}
  }
  class OrcMage {
    + OrcMage()
    + clone() : Mage
    + toString() : String
  }
  class ElfBeast {
    + ElfBeast()
    + clone() : Beast
    + toString() : String
  }
}
HeroFactoryImpl -->  "-beast" Beast
HeroFactoryImpl -->  "-warlord" Warlord
HeroFactoryImpl -->  "-mage" Mage
OrcBeast --|> Beast 
Mage --|> Prototype 
HeroFactoryImpl ..|> HeroFactory 
ElfMage --|> Mage 
Warlord --|> Prototype 
OrcWarlord --|> Warlord 
ElfWarlord --|> Warlord 
Beast --|> Prototype 
OrcMage --|> Mage 
ElfBeast --|> Beast 
@enduml